"use strict";(()=>{var e={};e.id=266,e.ids=[266],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},58160:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var n={};r.r(n),r.d(n,{GET:()=>p});var s=r(49303),a=r(88716),o=r(60670),i=r(87070);let u=new(r(53524)).PrismaClient;async function p(e){try{let{searchParams:t}=new URL(e.url),r=t.get("eventId");if(!r)return i.NextResponse.json({error:"Event ID is required"},{status:400});let n=await u.events.findUnique({where:{id:r}});if(!n)return i.NextResponse.json({error:"Event not found"},{status:404});let s=`${n.name} Count - ${new Date().toLocaleDateString()}`,a=s,o=1;for(;await u.count_sessions.findFirst({where:{sessionName:a}});)a=`${s} (${o})`,o++;return i.NextResponse.json({sessionName:a})}catch(e){return console.error("Failed to generate session name:",e),i.NextResponse.json({error:"Failed to generate session name"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/counts/generate-name/route",pathname:"/api/counts/generate-name",filename:"route",bundlePath:"app/api/counts/generate-name/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/counts/generate-name/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:m}=d,g="/api/counts/generate-name/route";function x(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[276,972],()=>r(58160));module.exports=n})();