"use strict";(()=>{var e={};e.id=8247,e.ids=[8247],e.modules={3524:e=>{e.exports=require("@prisma/client")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},3695:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>v,patchFetch:()=>y,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>j,staticGenerationAsyncStorage:()=>w});var n={};r.r(n),r.d(n,{GET:()=>f,POST:()=>x});var a=r(9303),s=r(8716),i=r(670),o=r(7070),u=r(8574),c=r(3524),p=r(4770),l=r.n(p);let d=new c.PrismaClient,m=process.env.EMAIL_ENCRYPTION_KEY||"default-key-change-in-production";async function f(){try{let e=await u.e.getCurrentUser();if(!e||!["ADMIN","OVERSEER"].includes(e.role))return o.NextResponse.json({error:"Unauthorized"},{status:401});let t=await d.email_configurations.findFirst({where:{isActive:!0}});if(!t)return o.NextResponse.json({error:"No email configuration found"},{status:404});let{smtpPassword:r,...n}=t;return o.NextResponse.json(n)}catch(e){return console.error("Failed to fetch email config:",e),o.NextResponse.json({error:"Failed to fetch email configuration"},{status:500})}}async function x(e){try{let t=await u.e.getCurrentUser();if(!t||"ADMIN"!==t.role)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{smtpServer:r,smtpPort:n,smtpUser:a,smtpPassword:s,fromEmail:i,fromName:c,replyToEmail:p,inviteTemplate:f,assignmentTemplate:x,reminderTemplate:g}=await e.json();if(!r||!n||!a||!s||!i||!c)return o.NextResponse.json({error:"Missing required fields"},{status:400});await d.email_configurations.updateMany({where:{isActive:!0},data:{isActive:!1,updatedAt:new Date}});let{smtpPassword:h,...w}=await d.email_configurations.create({data:{id:l().randomUUID(),smtpServer:r,smtpPort:parseInt(n),smtpUser:a,smtpPassword:function(e){let t=l().createCipher("aes-256-cbc",m),r=t.update(e,"utf8","hex");return r+=t.final("hex")}(s),fromEmail:i,fromName:c,replyToEmail:p,inviteTemplate:f,assignmentTemplate:x,reminderTemplate:g,isActive:!0,createdAt:new Date,updatedAt:new Date}});return o.NextResponse.json(w,{status:201})}catch(e){return console.error("Failed to create email config:",e),o.NextResponse.json({error:"Failed to create email configuration"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/email/config/route",pathname:"/api/email/config",filename:"route",bundlePath:"app/api/email/config/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/email/config/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:h,staticGenerationAsyncStorage:w,serverHooks:j}=g,v="/api/email/config/route";function y(){return(0,i.patchFetch)({serverHooks:j,staticGenerationAsyncStorage:w})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[9276,5972,8574],()=>r(3695));module.exports=n})();