"use strict";(()=>{var e={};e.id=278,e.ids=[278],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9486:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>m,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var a={};n.r(a),n.d(a,{GET:()=>c});var r=n(9303),s=n(8716),o=n(670),i=n(7070);let u=new(n(3524)).PrismaClient;async function c(){try{let e=await u.count_sessions.count({where:{isActive:!0}}),t=await u.count_sessions.count({where:{isActive:!0,countTime:{gte:new Date(Date.now()-2592e6)}}}),n={totalSessions:e,activeSessions:t,averageSessionsPerMonth:Math.round(e/12),lastUpdated:new Date().toISOString()};return i.NextResponse.json(n)}catch(e){return console.error("Failed to fetch count analytics:",e),i.NextResponse.json({error:"Failed to fetch count analytics"},{status:500})}}let p=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/counts/analytics/route",pathname:"/api/counts/analytics",filename:"route",bundlePath:"app/api/counts/analytics/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/counts/analytics/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:h}=p,m="/api/counts/analytics/route";function y(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),a=t.X(0,[276,972],()=>n(9486));module.exports=a})();