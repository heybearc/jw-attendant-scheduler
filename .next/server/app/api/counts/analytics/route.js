"use strict";(()=>{var e={};e.id=7278,e.ids=[7278],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9486:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var a={};r.r(a),r.d(a,{GET:()=>c});var n=r(9303),s=r(8716),o=r(670),i=r(7070);let u=new(r(3524)).PrismaClient;async function c(){try{let e=await u.users.count({where:{isActive:!0}}),t=await u.users.count({where:{isActive:!0,lastLogin:{gte:new Date(Date.now()-2592e6)}}}),r={totalSessions:e,activeSessions:t,averageSessionsPerMonth:Math.round(e/12),lastUpdated:new Date().toISOString()};return i.NextResponse.json(r)}catch(e){return console.error("Failed to fetch count analytics:",e),i.NextResponse.json({error:"Failed to fetch count analytics"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/counts/analytics/route",pathname:"/api/counts/analytics",filename:"route",bundlePath:"app/api/counts/analytics/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/counts/analytics/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:h}=p,m="/api/counts/analytics/route";function y(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9276,5972],()=>r(9486));module.exports=a})();