"use strict";(()=>{var e={};e.id=247,e.ids=[247],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},73695:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>w,patchFetch:()=>j,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>v,staticGenerationAsyncStorage:()=>q});var s={};r.r(s),r.d(s,{GET:()=>f,POST:()=>m});var i=r(49303),n=r(88716),o=r(60670),a=r(87070),u=r(45609),p=r(53524),c=r(84770),l=r.n(c);let d=new p.PrismaClient,x=process.env.EMAIL_ENCRYPTION_KEY||"default-key-change-in-production";async function f(){try{let e=await (0,u.getServerSession)();if(!e||!["ADMIN","OVERSEER"].includes(e.user.role))return a.NextResponse.json({error:"Unauthorized"},{status:401});let t=await d.email_configurations.findFirst({where:{isActive:!0}});if(!t)return a.NextResponse.json({error:"No email configuration found"},{status:404});let{smtpPassword:r,...s}=t;return a.NextResponse.json(s)}catch(e){return console.error("Failed to fetch email config:",e),a.NextResponse.json({error:"Failed to fetch email configuration"},{status:500})}}async function m(e){try{let t=await (0,u.getServerSession)();if(!t||"ADMIN"!==t.user.role)return a.NextResponse.json({error:"Unauthorized"},{status:401});let{smtpServer:r,smtpPort:s,smtpUser:i,smtpPassword:n,fromEmail:o,fromName:p,replyToEmail:c,inviteTemplate:f,assignmentTemplate:m,reminderTemplate:g}=await e.json();if(!r||!s||!i||!n||!o||!p)return a.NextResponse.json({error:"Missing required fields"},{status:400});await d.email_configurations.updateMany({where:{isActive:!0},data:{isActive:!1,updatedAt:new Date}});let{smtpPassword:h,...q}=await d.email_configurations.create({data:{id:l().randomUUID(),smtpServer:r,smtpPort:parseInt(s),smtpUser:i,smtpPassword:function(e){let t=l().createCipher("aes-256-cbc",x),r=t.update(e,"utf8","hex");return r+=t.final("hex")}(n),fromEmail:o,fromName:p,replyToEmail:c,inviteTemplate:f,assignmentTemplate:m,reminderTemplate:g,isActive:!0,createdAt:new Date,updatedAt:new Date}});return a.NextResponse.json(q,{status:201})}catch(e){return console.error("Failed to create email config:",e),a.NextResponse.json({error:"Failed to create email configuration"},{status:500})}}let g=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/email/config/route",pathname:"/api/email/config",filename:"route",bundlePath:"app/api/email/config/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/email/config/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:q,serverHooks:v}=g,w="/api/email/config/route";function j(){return(0,o.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:q})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972,609],()=>r(73695));module.exports=s})();