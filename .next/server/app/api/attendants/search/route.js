"use strict";(()=>{var e={};e.id=2393,e.ids=[2393],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5019:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{GET:()=>p});var n=r(9303),s=r(8716),o=r(670),i=r(7070);let u=new(r(3524)).PrismaClient;async function p(e){try{let{searchParams:t}=new URL(e.url),r=t.get("q");if(!r)return i.NextResponse.json({error:"Search query is required"},{status:400});let a=await u.attendants.findMany({where:{OR:[{firstName:{contains:r}},{lastName:{contains:r}},{email:{contains:r}}],isAvailable:!0},orderBy:{lastName:"asc"}});return i.NextResponse.json(a)}catch(e){return console.error("Failed to search attendants:",e),i.NextResponse.json({error:"Failed to search attendants"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/attendants/search/route",pathname:"/api/attendants/search",filename:"route",bundlePath:"app/api/attendants/search/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/attendants/search/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:h}=d,m="/api/attendants/search/route";function x(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:l})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9276,5972],()=>r(5019));module.exports=a})();