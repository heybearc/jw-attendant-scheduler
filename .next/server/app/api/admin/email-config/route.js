"use strict";(()=>{var e={};e.id=8748,e.ids=[8748],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},4781:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>j,requestAsyncStorage:()=>x,routeModule:()=>v,serverHooks:()=>N,staticGenerationAsyncStorage:()=>A});var s={};r.r(s),r.d(s,{GET:()=>d,POST:()=>f,PUT:()=>g});var o=r(9303),a=r(8716),i=r(670),n=r(7070),u=r(3524),l=r(4770),m=r.n(l);let c=new u.PrismaClient,p=process.env.EMAIL_ENCRYPTION_KEY||"default-key-for-staging-only-32b";async function d(e){try{let e=await c.email_configurations.findFirst({where:{isActive:!0},select:{id:!0,smtpServer:!0,smtpPort:!0,smtpUser:!0,fromEmail:!0,fromName:!0,isActive:!0,createdAt:!0,updatedAt:!0}});if(!e)return n.NextResponse.json({error:"No email configuration found"},{status:404});return n.NextResponse.json(e)}catch(e){return console.error("Failed to fetch email configuration:",e),n.NextResponse.json({error:"Failed to fetch email configuration"},{status:500})}}async function f(e){try{let{smtpHost:t,smtpPort:r,smtpUser:s,smtpPassword:o,fromEmail:a,fromName:i,testEmail:u}=await e.json();if(!t||!r||!s||!o||!a||!i)return n.NextResponse.json({error:"Missing required fields: smtpHost, smtpPort, smtpUser, smtpPassword, fromEmail, fromName"},{status:400});let l=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!l.test(a))return n.NextResponse.json({error:"Invalid fromEmail format"},{status:400});if(u&&!l.test(u))return n.NextResponse.json({error:"Invalid testEmail format"},{status:400});let d=function(e){let t=m().createCipher("aes-256-cbc",p),r=t.update(e,"utf8","hex");return r+=t.final("hex")}(o);await c.email_configurations.updateMany({where:{isActive:!0},data:{isActive:!1,updatedAt:new Date}});let f=await c.email_configurations.create({data:{id:m().randomUUID(),smtpServer:t,smtpPort:parseInt(r.toString()),smtpUser:s,smtpPassword:d,fromEmail:a,fromName:i,isActive:!0,updatedAt:new Date},select:{id:!0,smtpServer:!0,smtpPort:!0,smtpUser:!0,fromEmail:!0,fromName:!0,isActive:!0,createdAt:!0,updatedAt:!0}});return u&&console.log(`[EMAIL_CONFIG] Test email would be sent to: ${u}`),n.NextResponse.json({message:"Email configuration saved successfully",config:f})}catch(e){return console.error("Failed to save email configuration:",e),n.NextResponse.json({error:"Failed to save email configuration"},{status:500})}}async function g(e){try{let{testEmail:t}=await e.json();if(!t)return n.NextResponse.json({error:"Test email address required"},{status:400});if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t))return n.NextResponse.json({error:"Invalid email format"},{status:400});let r=await c.email_configurations.findFirst({where:{isActive:!0}});if(!r)return n.NextResponse.json({error:"No active email configuration found"},{status:404});return console.log(`[EMAIL_TEST] Test email would be sent to: ${t}`),console.log(`[EMAIL_TEST] Using SMTP: ${r.smtpServer}:${r.smtpPort}`),console.log(`[EMAIL_TEST] From: ${r.fromName} <${r.fromEmail}>`),n.NextResponse.json({message:"Test email sent successfully",sentTo:t})}catch(e){return console.error("Failed to send test email:",e),n.NextResponse.json({error:"Failed to send test email"},{status:500})}}let v=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/admin/email-config/route",pathname:"/api/admin/email-config",filename:"route",bundlePath:"app/api/admin/email-config/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/admin/email-config/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:A,serverHooks:N}=v,h="/api/admin/email-config/route";function j(){return(0,i.patchFetch)({serverHooks:N,staticGenerationAsyncStorage:A})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972],()=>r(4781));module.exports=s})();