# Generated by Django 4.2.23 on 2025-08-01 16:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('overseer', 'Overseer'), ('assistant_overseer', 'Assistant Overseer'), ('keyman', 'Keyman'), ('attendant', 'Attendant')], default='attendant', max_length=20)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('invitation_token', models.CharField(blank=True, max_length=255, null=True)),
                ('invitation_sent_at', models.DateTimeField(blank=True, null=True)),
                ('invitation_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_users', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('congregation', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('jw_status', models.CharField(choices=[('elder', 'Elder'), ('ministerial_servant', 'Ministerial Servant'), ('regular_pioneer', 'Regular Pioneer'), ('auxiliary_pioneer', 'Auxiliary Pioneer'), ('publisher', 'Publisher')], default='publisher', max_length=25)),
                ('experience_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('experienced', 'Experienced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('preferred_positions', models.TextField(blank=True, help_text='Comma-separated list of preferred positions')),
                ('availability_notes', models.TextField(blank=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'volunteer',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('circuit_assembly', 'Circuit Assembly'), ('regional_convention', 'Regional Convention'), ('special_assembly_day', 'Special Assembly Day'), ('meeting', 'Meeting')], default='circuit_assembly', max_length=25)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('current', 'Current'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=15)),
                ('total_stations', models.IntegerField(default=0)),
                ('expected_attendants', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='StationRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Stations 1-12'", max_length=100)),
                ('start_station', models.IntegerField()),
                ('end_station', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['start_station'],
            },
        ),
        migrations.CreateModel(
            name='OverseerAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scheduler.department')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overseer_assignments', to='scheduler.event')),
                ('overseer', models.ForeignKey(limit_choices_to={'role__in': ['overseer', 'assistant_overseer']}, on_delete=django.db.models.deletion.CASCADE, related_name='overseer_assignments', to=settings.AUTH_USER_MODEL)),
                ('station_range', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scheduler.stationrange')),
            ],
            options={
                'unique_together': {('overseer', 'event')},
            },
        ),
        migrations.CreateModel(
            name='AttendantOverseerAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attendant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overseer_assignments', to='scheduler.attendant')),
                ('overseer_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendant_assignments', to='scheduler.overseerassignment')),
            ],
            options={
                'unique_together': {('attendant', 'overseer_assignment')},
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(help_text='Gate, Parking, Information, etc.', max_length=100)),
                ('shift_start', models.DateTimeField()),
                ('shift_end', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='scheduler.attendant')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='scheduler.event')),
            ],
            options={
                'ordering': ['shift_start'],
                'unique_together': {('attendant', 'event', 'shift_start')},
            },
        ),
    ]
