"use strict";(()=>{var e={};e.id=247,e.ids=[247],e.modules={3524:e=>{e.exports=require("@prisma/client")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},6162:e=>{e.exports=require("stream")},1764:e=>{e.exports=require("util")},3695:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>E,patchFetch:()=>y,requestAsyncStorage:()=>x,routeModule:()=>g,serverHooks:()=>A,staticGenerationAsyncStorage:()=>w});var a={};r.r(a),r.d(a,{GET:()=>m,POST:()=>h});var i=r(9303),n=r(8716),s=r(670),o=r(7070),l=r(6955),u=r(3524),c=r(4770),d=r.n(c);let p=new u.PrismaClient,f=process.env.EMAIL_ENCRYPTION_KEY||"default-key-change-in-production";async function m(){try{let e=await l.e.getCurrentUser();if(!e||!["ADMIN","OVERSEER"].includes(e.role))return o.NextResponse.json({error:"Unauthorized"},{status:401});let t=await p.email_configurations.findFirst({where:{isActive:!0}});if(!t)return o.NextResponse.json({error:"No email configuration found"},{status:404});let{smtpPassword:r,...a}=t;return o.NextResponse.json(a)}catch(e){return console.error("Failed to fetch email config:",e),o.NextResponse.json({error:"Failed to fetch email configuration"},{status:500})}}async function h(e){try{let t=await l.e.getCurrentUser();if(!t||"ADMIN"!==t.role)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{smtpServer:r,smtpPort:a,smtpUser:i,smtpPassword:n,fromEmail:s,fromName:u,replyToEmail:c,inviteTemplate:m,assignmentTemplate:h,reminderTemplate:g}=await e.json();if(!r||!a||!i||!n||!s||!u)return o.NextResponse.json({error:"Missing required fields"},{status:400});await p.email_configurations.updateMany({where:{isActive:!0},data:{isActive:!1,updatedAt:new Date}});let{smtpPassword:x,...w}=await p.email_configurations.create({data:{id:d().randomUUID(),smtpServer:r,smtpPort:parseInt(a),smtpUser:i,smtpPassword:function(e){let t=d().createCipher("aes-256-cbc",f),r=t.update(e,"utf8","hex");return r+=t.final("hex")}(n),fromEmail:s,fromName:u,replyToEmail:c,inviteTemplate:m,assignmentTemplate:h,reminderTemplate:g,isActive:!0,createdAt:new Date,updatedAt:new Date}});return o.NextResponse.json(w,{status:201})}catch(e){return console.error("Failed to create email config:",e),o.NextResponse.json({error:"Failed to create email configuration"},{status:500})}}let g=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/email/config/route",pathname:"/api/email/config",filename:"route",bundlePath:"app/api/email/config/route"},resolvedPagePath:"/Users/cory/Documents/Cloudy-Work/applications/jw-attendant-scheduler/app/api/email/config/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:x,staticGenerationAsyncStorage:w,serverHooks:A}=g,E="/api/email/config/route";function y(){return(0,s.patchFetch)({serverHooks:A,staticGenerationAsyncStorage:w})}},6955:(e,t,r)=>{r.d(t,{e:()=>c});var a=r(1482),i=r.n(a),n=r(8691),s=r(3524),o=r(1615);let l=new s.PrismaClient,u=process.env.JWT_SECRET||"fallback-jwt-secret-for-development";class c{static async validateCredentials(e,t){try{let r=await l.users.findUnique({where:{email:e}});if(!r||!r.passwordHash||!await n.ZP.compare(t,r.passwordHash))return null;return await l.users.update({where:{id:r.id},data:{lastLogin:new Date}}),{id:r.id,email:r.email,firstName:r.firstName,lastName:r.lastName,role:r.role}}catch(e){return console.error("Auth validation error:",e),null}}static generateToken(e){let t={userId:e.id,email:e.email,role:e.role};return i().sign(t,u,{expiresIn:"7d"})}static verifyToken(e){try{console.log("[AUTH_SERVICE] Verifying JWT token, length:",e.length),console.log("[AUTH_SERVICE] JWT_SECRET available:",!!u),console.log("[AUTH_SERVICE] JWT_SECRET length:",u.length);let t=i().verify(e,u);return console.log("[AUTH_SERVICE] JWT verification successful, payload:",{userId:t.userId,email:t.email,role:t.role}),t}catch(t){return console.error("[AUTH_SERVICE] JWT verification failed:",t),console.log("[AUTH_SERVICE] Token that failed:",e.substring(0,50)+"..."),null}}static setAuthCookie(e){(0,o.cookies)().set("auth-token",e,{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800,path:"/"})}static clearAuthCookie(){(0,o.cookies)().delete("auth-token")}static async getCurrentUser(){try{let e=(0,o.cookies)(),t=e.get("auth-token")?.value;if(!t)return null;let r=this.verifyToken(t);if(!r)return null;let a=await l.users.findUnique({where:{id:r.userId}});if(!a)return null;return{id:a.id,email:a.email,firstName:a.firstName,lastName:a.lastName,role:a.role}}catch(e){return console.error("Get current user error:",e),null}}static async requireAuth(){let e=await this.getCurrentUser();if(!e)throw Error("Authentication required");return e}static async requireAdmin(){let e=await this.requireAuth();if("ADMIN"!==e.role)throw Error("Admin access required");return e}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972,80],()=>r(3695));module.exports=a})();